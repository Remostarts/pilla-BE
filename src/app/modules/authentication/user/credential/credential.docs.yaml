paths:
    # paths
    /auth/register:
        post:
            # security:
            #   - bearerAuth: []
            tags: [Auth]
            summary: Creates a new user
            description: Authentication Management
            requestBody:
                description: check schema for required fields
                required: true
                content:
                    'application/json':
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/user'
                                - type: object
                                  properties:
                                      password:
                                          type: string
                                          format: password
                                          example: PassWord123
                                      confirmPassword:
                                          type: string
                                          format: password
                                          example: PassWord123

                            required: ['password', 'confirmPassword']
            responses:
                '201':
                    description: Successful User Creation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/201'
                                    - type: object
                                      properties:
                                          data:
                                              allOf:
                                                  - $ref: '#/components/schemas/userRegisterResponse'
                                                  - $ref: '#/components/schemas/timestamps'

                '400':
                    $ref: '#/components/responses/400'
                '409':
                    $ref: '#/components/responses/409'
                '500':
                    $ref: '#/components/responses/500'
    /auth/login:
        post:
            # security:
            #   - bearerAuth: []
            tags: [Auth]
            summary: Login user
            description: Authentication Management
            requestBody:
                description: check schema for required fields
                required: true
                content:
                    'application/json':
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: testr4dfsytg534@gmail.com
                                password:
                                    type: string
                                    format: password
                                    example: aA1!ss

                            required: ['email', 'password']
            responses:
                '200':
                    description: Successful User Login
                    headers:
                        Set-Cookie:
                            description: Set Refresh Token Cookie
                            schema:
                                type: string
                                format: jwt
                                example: eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp3434324sdf
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/200'
                                    - type: object
                                      properties:
                                          message:
                                              type: string
                                              example: 'user logged in successfully!'
                                          data:
                                              allOf:
                                                  - $ref: '#/components/schemas/userLoginResponse'

                '400':
                    $ref: '#/components/responses/400'
                '401':
                    $ref: '#/components/responses/401'
                '404':
                    $ref: '#/components/responses/404'
                '500':
                    $ref: '#/components/responses/500'
    /auth/refresh-token:
        get:
            security:
                - cookieAuth: []
            tags: [Auth]
            summary: Refresh Token
            description: Authentication Management
            responses:
                '200':
                    description: Successful Token Refresh

                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/200'
                                    - type: object
                                      properties:
                                          message:
                                              type: string
                                              example: 'token refreshed successfully!'
                                          data:
                                              allOf:
                                                  - $ref: '#/components/schemas/userLoginResponse'

                '400':
                    $ref: '#/components/responses/400'
                '401':
                    $ref: '#/components/responses/401'
                '403 ':
                    $ref: '#/components/responses/403'
                '404':
                    $ref: '#/components/responses/404'
                '500':
                    $ref: '#/components/responses/500'
    /auth/logout:
        get:
            security:
                - cookieAuth: []
            tags: [Auth]
            summary: Logout user
            description: Authentication Management
            responses:
                '204':
                    description: No Content

                '400':
                    $ref: '#/components/responses/400'
                '401':
                    $ref: '#/components/responses/401'
                '404':
                    $ref: '#/components/responses/404'
                '500':
                    $ref: '#/components/responses/500'

components:
    # components:
    schemas:
        user:
            properties:
                email:
                    type: string
                    format: email
                    example: user@mail.com
                firstName:
                    type: string
                    example: Mr. X
                lastName:
                    type: string
                    example: khan
                phoneNumber:
                    type: string
                    example: '01715678910'

            required: [email, firstName, lastName, phoneNumber]
        userRegisterResponse:
            allOf:
                - type: object
                  properties:
                      id:
                          type: string
                          format: uuid
                          example: 5f9b3b3b9b0b7c0017e2b3a5
                      role:
                          type: string
                          example: user
                      isVerified:
                          type: boolean
                          example: false
                - $ref: '#/components/schemas/user'
            required: [id, role, isVerified]
        userLoginResponse:
            properties:
                accessToken:
                    type: string
                    format: jwt
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp3434324sdf
                role:
                    type: string
                    example: user
            required: [role, accessToken]
        profile:
            type: object
            properties:
                id:
                    type: string
                road:
                    type: string
                house:
                    type: string
                city:
                    type: string
                phoneNumber:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                userId:
                    type: string
            required: [road, house, city, phoneNumber]
